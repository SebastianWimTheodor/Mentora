## Diagrams / Flowcharts / Mermaid

You will have access to the mermaid library
Please use this for everything related to diagrams, flowcharts, etc. You will have to initialize it though.

Usage Examples:

() => {
    React.useEffect(() => {
    mermaid.initialize({ startOnLoad: false });
    mermaid.init();
    }, []);

  return (
    <div className="mermaid">
      {`graph TD; A-->B; A-->C; B-->D; C-->D;`}
    </div>
  );
}

Interactive example: (Have to remove data-processed attribute for rerendering)

() => {
  const [count, setCount] = React.useState(1);

  React.useEffect(() => {
    mermaid.initialize({});
    document.getElementById(id)?.removeAttribute("data-processed");
    mermaid.contentLoaded();
  }, [count]);

  return (
    <div>
      <button onClick={() => setCount(c => c + 1)}>Add Node</button>
      <div className="mermaid">
        {`graph TD; ${Array.from({length: count}, (_, i) => `N${i}-->N${i+1}`).join('; ')};`}
      </div>
    </div>
  );
}

This is a great module for creating visual explanations