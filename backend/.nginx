
// -----------------------------------> 1 Server Configuration <-----------------------------------
# This file is used to configure the Nginx server for the Mentora AI application.
server {
  listen 80;
  listen [::]:80;
  listen 443 quic;
  listen 443 ssl;
  listen [::]:443 quic;
  listen [::]:443 ssl;
  http2 on;
  http3 off;
  {{ssl_certificate_key}}
  {{ssl_certificate}}
  server_name mentora.de;
  {{root}}
  {{nginx_access_log}}
  {{nginx_error_log}}

  # Redirect HTTP to HTTPS
  if ($scheme != "https") {
    rewrite ^ https://$host$request_uri permanent;
  }
 
    # Direkt auf HTTPS + www umleiten
    return 301 https://www.mentora.de$request_uri;
}


server {
  listen 80;
  listen [::]:80;
  listen 443 quic;
  listen 443 ssl;
  listen [::]:443 quic;
  listen [::]:443 ssl;
  http2 on;
  http3 off;
  {{ssl_certificate_key}}
  {{ssl_certificate}}
  server_name www.mentora.de;
  {{root}}
  {{nginx_access_log}}
  {{nginx_error_log}}

  # Redirect HTTP to HTTPS
  if ($scheme != "https") {
    rewrite ^ https://$host$request_uri permanent;
  }
  
  # Define reverse proxy settings
  location @reverse_proxy {
    proxy_pass {{reverse_proxy_url}};
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_ssl_server_name on;
    proxy_ssl_name $host;
    proxy_pass_request_headers on;
    proxy_max_temp_file_size 0;
    proxy_connect_timeout 900;
    proxy_send_timeout 900;
    proxy_read_timeout 900;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
  }

  {{settings}}
  include /etc/nginx/global_settings;
  add_header Cache-Control no-transform;
  index index.html;

  # Allow access to let's encrypt verification
  location ^~ /.well-known {
    auth_basic off;
    allow all;
    try_files $uri @reverse_proxy;
  }
  
  location ~ /\.env {
    deny all;
  }
  
  location ^~ /api/courses/ws/ {
    proxy_pass {{reverse_proxy_url}};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_read_timeout 86400;
  }

  # Route API requests to proxy - rewrite the path to remove /api prefix
  location ^~ /api/ {
    proxy_pass {{reverse_proxy_url}};
    
    # Add these to properly handle all HTTP methods
    proxy_method $request_method;
    proxy_pass_request_body on;
    
    # Existing proxy headers
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_pass_request_headers on;
  }

  # Serve static assets with appropriate cache headers
  location /assets/ {
    alias /home/mentora/htdocs/www.mentora.de/dist/assets/;
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Handle all other routes - serve React index.html
  location / {
    root /home/mentora/htdocs/www.mentora.de/dist;
    try_files $uri /index.html;
  }
  
}



// -----------------------------------> 2 Reverse Proxy Configuration <-----------------------------------
// Worker processes: //!!!! DENY .env files!!!!!!!!!!!!!!!
server {
  listen 80;
  listen [::]:80;
  listen 443 quic;
  listen 443 ssl;
  listen [::]:443 quic;
  listen [::]:443 ssl;
  http2 off;
  http3 on;
  {{ssl_certificate_key}}
  {{ssl_certificate}}
  server_name worker.mentora.de;
  {{root}}



  {{nginx_access_log}}
  {{nginx_error_log}}

  # Redirect all HTTP to HTTPS
  if ($scheme != "https") {
    rewrite ^ https://$host$request_uri permanent;
  }

  # Reverse Proxy für /api/ *
  location ^~ /api/ {
    proxy_pass {{reverse_proxy_url}};
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_ssl_server_name on;
    proxy_ssl_name $host;
    proxy_pass_request_headers on;
    proxy_max_temp_file_size 0;
    proxy_connect_timeout 900;
    proxy_send_timeout 900;
    proxy_read_timeout 900;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
  }

  # Deny access to .env
  location ~ /\.env {
    deny all;
  }

  # Allow .well-known for ACME challenges etc.
  location ^~ /.well-known {
    auth_basic off;
    allow all;
    try_files $uri =404;
  }

  # Block everything else with 403
  location / {
    return 403;
  }

  {{settings}}

  include /etc/nginx/global_settings;

  add_header Cache-Control no-transform;

  index index.html;
}

// Proxy VHost  
}

server {
  listen 80;
  listen [::]:80;
  listen 443 quic;
  listen 443 ssl;
  listen [::]:443 quic;
  listen [::]:443 ssl;
  http2 on;
  http3 off;
  {{ssl_certificate_key}}
  {{ssl_certificate}}
  server_name mentora.de;
  {{root}}
  {{nginx_access_log}}
  {{nginx_error_log}}

  # Redirect HTTP to HTTPS
  if ($scheme != "https") {
    rewrite ^ https://$host$request_uri permanent;
  }
 
    # Direkt auf HTTPS + www umleiten
    return 301 https://www.mentora.de$request_uri;
}


server {
  listen 80;
  listen [::]:80;
  listen 443 quic;
  listen 443 ssl;
  listen [::]:443 quic;
  listen [::]:443 ssl;
  http2 on;
  http3 off;
  {{ssl_certificate_key}}
  {{ssl_certificate}}
  server_name www.mentora.de;
  {{root}}
  {{nginx_access_log}}
  {{nginx_error_log}}

  # Redirect HTTP to HTTPS
  if ($scheme != "https") {
    rewrite ^ https://$host$request_uri permanent;
  }
  
  # Define reverse proxy settings
  location @reverse_proxy {
    proxy_pass {{reverse_proxy_url}};
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Host $host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_ssl_server_name on;
    proxy_ssl_name $host;
    proxy_pass_request_headers on;
    proxy_max_temp_file_size 0;
    proxy_connect_timeout 900;
    proxy_send_timeout 900;
    proxy_read_timeout 900;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
  }

  {{settings}}
  include /etc/nginx/global_settings;
  add_header Cache-Control no-transform;
  index index.html;

  # Allow access to let's encrypt verification
  location ^~ /.well-known {
    auth_basic off;
    allow all;
    try_files $uri @reverse_proxy;
  }
  
  location ~ /\.env {
    deny all;
  }
  
  location /api/notifications/ws/ {
    proxy_pass {{reverse_proxy_url}};
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    proxy_read_timeout 86400;
  }

  # Route API requests to proxy - rewrite the path to remove /api prefix
  #location ^~ /api/ {
  #  proxy_pass {{reverse_proxy_url}};
  #  
  #  # Add these to properly handle all HTTP methods
  #  proxy_method $request_method;
  #  proxy_pass_request_body on;
  #  
  #  
  #  # Existing proxy headers
  #  proxy_http_version 1.1;
  #  proxy_set_header X-Forwarded-Host $host;
  #  proxy_set_header X-Forwarded-Server $host;
  #  proxy_set_header X-Real-IP $remote_addr;
  #  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  #  proxy_set_header X-Forwarded-Proto $scheme;
  #  proxy_set_header Host $host;
  #  proxy_pass_request_headers on;
  #}
  
  
 location ^~ /api/ {
    # Wir deaktivieren Pagespeed, da es für APIs immer problematisch ist.
    pagespeed off;

    # Ziel-URL des zweiten Servers.
    proxy_pass https://worker.mentora.de;

    # === DER ENTSCHEIDENDE FIX FÜR DEN SSL-FEHLER ===
    # Diese beiden Zeilen weisen Nginx an, beim SSL-Handshake den korrekten
    # Hostnamen 'worker.mentora.de' zu verwenden (SNI), auch wenn es intern
    # vielleicht die IP-Adresse auflöst.
    proxy_ssl_server_name on;
    proxy_ssl_name "worker.mentora.de";

    # Standard-Proxy-Header
    proxy_http_version 1.1;

    # Setzt den HTTP-Host-Header. Wichtig für die Anwendung auf dem Worker.
    proxy_set_header Host "worker.mentora.de";
    
    # Restliche Header für korrekte Client-Infos
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  

  # Serve static assets with appropriate cache headers
  location /assets/ {
    alias /home/mentora/htdocs/www.mentora.de/dist/assets/;
    expires 1y;
    add_header Cache-Control "public, max-age=31536000, immutable";
    try_files $uri =404;
  }

  # Handle all other routes - serve React index.html
  location / {
    root /home/mentora/htdocs/www.mentora.de/dist;
    try_files $uri /index.html;
  }
  
}